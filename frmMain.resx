<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSave.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btnDelete.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>